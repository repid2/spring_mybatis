<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 매퍼로 사용될 인터페이스를 namespace로 작성 -->
<mapper
	namespace="com.joonbread.springmybatis.member.repository.MemberDAO">

	<resultMap type="memberDto" id="member">
	 <id property="userId" column="user_id" jdbcType="VARCHAR"/>
	 <id property="userPw" column="user_pw" jdbcType="VARCHAR" />
		<id property="userName" column="user_name" jdbcType="VARCHAR" />
		<id property="userNick" column="user_nick" jdbcType="VARCHAR" />
		<id property="userEmail" column="user_email" jdbcType="VARCHAR" />
		<id property="userPhone" column="user_phone" jdbcType="VARCHAR" />
		<id property="userRegDate" column="user_regDate" jdbcType="VARCHAR" />
		<id property="userCreateDate" column="user_createDate" jdbcType="DATE" />
		<id property="userUpdateDate" column="user_updateDate" jdbcType="DATE" />
	</resultMap>

	<!-- 회원 리스트 -->
	<select id="memberList" resultType="memberDto" resultMap="member">
	
		select 
			*
		from member
	</select>
	<!-- USER_ID userId,
			USER_PW userPw,
			USER_NAME userName,
			USER_NICK userNick,
			USER_EMAIL userEmail,
			USER_PHONE userPhone,
			USER_REGDATE userRegDate,
			USER_CREATEDATE userCreateDate,
			USER_UPDATEDATE userUpdateDate -->
	
	<!-- 로그인 -->
	<select id="checkPw" resultType="int" >
		select count(*)
		from member
		where
		user_id = #{userId} and user_pw = #{userPw}
	</select>

	<!-- 전체 회원 수 -->
	<select id="memberCnt" resultType="int">
		select count(*)
		from member
	</select>

	<!-- 회원가입 -->
	<insert id="insertMember" parameterType="memberDto">
		insert into member
		values(
		#{userId}, 
		#{userPw}, 
		#{userName}, 
		#{userNick},
		#{userEmail}, 
		#{userPhone}, 
		#{userGender},
		#{userRegDate}, 
		sysdate,
		sysdate
		)
	</insert>
	

	<!-- 회원정보 확인 -->
	<select id="viewMember" resultType="memberDto">
		select *
		from member
		where
		user_id = #{userId}
	</select>

	<!-- 회원 정보 수정 -->
	<update id="updateMember">
		update member set
		user_pw = #{userPw},
		user_email = #{userEmail},
		user_phone = #{userPhone},
		user_updateDate =
		${userUpdateDate}
		where user_id = ${userId}
	</update>
	<!-- 
	user_pw = #{user_pw},
		user_email = #{user_email},
		user_phone = #{user_phone},
		user_updateDate =
		${user_updateDate}
		where user_id = ${user_id} -->

	<delete id="deleteMember">
		delete from member
		where user_id = #{userId}
	</delete>


</mapper>